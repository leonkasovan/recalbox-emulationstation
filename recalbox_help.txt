|
TODO:
1. use gamelist.zip
2. fix IP notification info (done)
3. add help and guide (done)
4. fix BIOS check (done)
5. add to quit from ES (done)
6a. add scrape from save state (done)
6b. add scrape from Screenshot (done)
7. add eject (unmount) usb device
8. add install ports (done)
|
ADD NEW SYSTEM.
nano /recalbox/share/system/.emulationstation/systemlist.xml

<?xml version="1.0" ?>
<systemList>
  <system uuid="novancd6-ebaa-4925-864a-46c84b0dc003" name="love" fullname="Love 2D Engine">
    <descriptor command="/usr/bin/love %ROM%" path="%ROOT%/love" theme="dos" extensions=".zip .love" icon="$F2d7" downloader="0"/>
    <scraper screenscraper="223"/>
    <properties type="engine" pad="mandatory" keyboard="optional" mouse="no" lightgun="no" crt.multiresolution="0" crt.multiregion="0" ignoredfiles=""/>
    <emulatorList>
      <emulator name="love">
        <core name="love" priority="1" extensions=".zip .love" netplay="0" softpatching="0" compatibility="high" speed="high" crt.available="1"/>
      </emulator>
    </emulatorList>
  </system>
</systemList>
|
SDL 1.2 COMPATIBILITY LAYER
In Recalbox OS, using Custom Front-End: Emulation Station. 
It only launchs SDL2 application. SDL1.2 application can not be launched in this front-end. 
So to be enable run SDL1.2 application, it needs specific for library sdl1.2 https://github.com/libsdl-org/sdl12-compat. 
Binary for aarch64 is not provided in official SDL repository. 
So we need to build it manually and replace sdl1.2 binary in RG353P /usr/lib/
|
BUILD RECALBOX IMAGE FROM SOURCE
export ARCH="rg353x"
export RECALBOX_VERSION="9.1-Pulstar"
git clone https://gitlab.com/recalbox/recalbox.git recalbox-${ARCH}
cd recalbox-${ARCH}
./scripts/linux/recaldocker.sh bash

After enter docker shell:
  make recalbox-rg353x_defconfig
  make menuconfig
  make BR2_DL_DIR="/share/dl"
  exit

Copy the image:
  cp output/images/recalbox/recalbox-rg353x.img.xz /mnt/e/Anbernic/RG353P/recalbox-rg353x-dev.img.xz
|
OPENGL COMPATIBILITY LAYER
RG353P only support OpenGL ES 2.0 not OpenGL.
But we can make OpenGL compatibility layer using gl4gles.

git clone https://github.com/leonkasovan/gl4es.git
cd gl4es && mkdir build && cd build
cmake .. -DNOEGL=1 -DNOX11=1 -DDEFAULT_ES=2 -DUSE_CLOCK=ON
make
cp lib/libGL.so.1 /home/ark/recalbox-rg353x/output/host/aarch64-buildroot-linux-gnu/sysroot/usr/lib/
cd /home/ark/recalbox-rg353x/output/host/aarch64-buildroot-linux-gnu/sysroot/usr/lib/
ln -s libGL.so.1 libGL.so

Run:
LIBGL_FB=4 Your_GL_App
|
RETROARCH CORE
Directory:
/usr/lib/retroarch
|
RECALBOX BIOS
Directory:
1. /recalbox/share_upgrade/bios/ (READONLY)
2. /recalbox/share/bios/
|
TAKE A SCREENSHOT
In-game RetroArch Screenshot Hotkey:
(F) + L1

In-game Non-RetroArch Screenshot Hotkey:
THUMB_L

Global:
1. Login via ssh using user root:recalboxroot
2. Run: kmsgrab
3. Check results in /recalbox/share/screenshots/screenshot_[DATETIME].png
|
SCRAPE FROM STATE SAVE
1. Locate a rom with save state
2. Go to Options: Press START -> SAVE STATE -> L1
|
SCRAPE FROM SCREENSHOT
1. Locate any rom
2. Go to Options: Press START -> Edit Game -> Scrape Local
|
RESTART GUI FRONTEND
1. Go to main system view
2. Press SELECT -> QUIT GUI FRONTEND
...
do something: update GUI executable
...
3. Press R2
|
This recalbox has been customized with sound driver: alsa (instead of pulse)
1. /etc/init.d/S06splash
2. Retroarch setting => sound driver 
3. SDL2 sound driver use alsa driver only (pulse driver removed)
|
LUA Scripting

Put lua script in /recalbox/share/roms/lua
|
Default file attribute

Default file attribute in /recalbox/share = 0755
It can be changed in /recalbox/script/recalbox-mount.sh

local windowsMask="fmask=0022,dmask=0022"
fmask : file mask 0022 => 0755
dmask : file mask 0022 => 0755
